// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member{
  id String @id @default(uuid())
  username String
  email String
  password String?

  name String?
  about String?
  status String?
  favorite String[]
  avatarurl String?

  messages Message[]

  directory Directory[]

  fromFriends FriendShip[] @relation("from")

  toFriends FriendShip[] @relation("to")

  dms DirectMessage[]

  deleted Boolean @default(false)

  starredMsgs StarredMessage[]

  @@unique([username])
  @@unique([email])
  @@index([username])
}

model Directory{
  id Int @id @default(autoincrement())
  
  chat_id String
  after DateTime @default(now())

  userId String
  user Member @relation(fields: [userId],references: [id])

  @@unique([chat_id,userId])
}

model Message {
  id Int @id @default(autoincrement())
  content String @db.Text

  memberId String
  sender Member @relation(fields:[memberId],references:[id])

  chatId String
  chat Chat @relation(fields:[chatId],references:[id])

  createdAt DateTime @default(now())

  deleted Boolean @default(false)

  hash String? @unique

  pinned Boolean @default(false)

  starredBy StarredMessage[]

  deletedFor String @default("")

}

model StarredMessage {
  id Int @id @default(autoincrement())
  msg Message @relation(fields: [msgId], references: [id])
  msgId Int 

  member Member @relation(fields: [memberId], references: [username])
  memberId String

  @@unique([memberId,msgId])
}

model Chat {
  id String @id @default(uuid())
  name String
  description String @default("")
  messages Message[]

  createdAt DateTime @default(now())
  lastmsgAt DateTime @default(now())

  deleted Boolean @default(false)
}

model FriendShip{
  id String @id @default(cuid())

  blocked Boolean @default(false)
  messageFrom DateTime @default(now())
  lastmsgAt DateTime @default(now())

  connectionId String

  fromId String
  from Member @relation("from", fields: [fromId], references: [username])

  toId String
  to Member @relation("to", fields: [toId], references: [username])

  messages DirectMessage[]

  @@unique([fromId,toId])
}

model DirectMessage {
  id Int @id @default(autoincrement())

  content String @db.Text
  createdAt DateTime @default(now())

  deleted Boolean @default(false)

  deleteFor String? @default("")

  connectionId String

  friendshipId String
  friendship FriendShip @relation(fields: [friendshipId], references: [id])

  senderId String
  sendBy Member @relation(fields: [senderId], references: [username])

  hash String? @unique

  pinned Boolean @default(false)

  starred String[]
}